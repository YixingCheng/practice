function mergeSort(arr) {
  
  if(arr.length < 2) {
    return arr;
  }
  
  const mid = Math.floor(arr.length / 2)
  const left = arr.slice(0, mid)
  const right = arr.slice(mid)
  
  return mergeSorted(mergeSort(left), mergeSort(right));
}

function mergeSorted(arr1, arr2) {
  const merged = [];
  while(arr1.length && arr2.length) {
    if (arr1[0] < arr2[0]) {
      merged.push(arr1.shift())
    } else {
      merged.push(arr2.shift())
    }
  }
  
  return [...merged, ...arr1, ...arr2];
}

function insertSort(array) {
  const len = array.length
  for(let i = 1; i < len; i++) {
    for(let j = i; j > 0; j--) {
      if (array[j] < array[j-1]) {
        swap(array, j, j-1)
      }
    }
  }
  return array;
}

function bubbleSort(arr) {
  const len = arr.length
  for(let i = 0; i < len - 1; i++) {
    for(let j = 0; j < len - i - 1; j++) {
      if (arr[j] > arr[j+1]) {
        swap(arr, j, j+1);
      }
    }
  }
  return arr
}

function selectSort(arr) {
  const len = arr.length
  for(let i = 0; i < len; i++) {
    let min = i
    for(let j = i + 1; j < len; j++) {
      if (arr[j] < arr[min]) {
        min = j
      }
    }
    if (min !== i) {
      swap(arr, min, i);
    }
  }
  return arr
}

function swap(arr, i, j) {
  var temp = arr[i]
  arr[i] = arr[j]
  arr[j] = temp
}
